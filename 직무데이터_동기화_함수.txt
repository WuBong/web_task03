# 직무 데이터 동기화 함수
def sync_jobs_from_saramin():
    # sqlite3로 saramin_jobs.db에 연결
    conn = sqlite3.connect('webcrawling/saramin_jobs.db')
    cursor = conn.cursor()
    
    # 데이터를 가져올 SQL 쿼리
    cursor.execute('SELECT * FROM jobs')  # 'jobs' 테이블에서 모든 데이터를 가져옵니다.
    rows = cursor.fetchall()  # 결과를 모두 가져옵니다.
    
    with app.app_context():  # 애플리케이션 컨텍스트를 명시적으로 설정
        for row in rows:
            # 직무 데이터를 가져와 Job 모델에 추가
            job = Job(
                id=row[0],  # id (자동 증가일 경우 설정하지 않아도 됩니다)
                today=row[1],
                title=row[2],
                company=row[3],
                url=row[4],
                deadline=row[5],
                location=row[6],
                experience=row[7],
                requirement=row[8],
                jobtype=row[9],
                jobday=row[10],
                views=row[11] if len(row) > 11 else 0  # views 값이 없을 경우 기본값 0 설정
            )
            # Job 모델에 추가
            db.session.add(job)
        
        # DB 커밋 및 연결 종료
        db.session.commit()
        conn.close()
        print("직무 데이터가 성공적으로 동기화되었습니다!")

# 직무 데이터 동기화 호출
sync_jobs_from_saramin()